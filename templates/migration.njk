'use strict'
{% macro relation(rel) %}
      table.foreign([{% for v in rel.foreignkeys %} "{{v|safe}}" {% if loop.last %} {% else %},{% endif %} {% endfor %}]).references([{% for v in rel.relatedcolumn %} "{{v|safe}}"  {% if loop.last %} {% else %},{% endif %}{% endfor %}]).inTable("{{rel.relatedtable}}")
{% endmacro %}
const Schema = use('Schema')

class {{name}}Schema extends Schema {

  up () {
    this.create('{{table}}', (table) => { 
      {% for key , value in fields %}{{key|fields(value)|safe}};
      {% endfor %}
      {% if autoincrement===false %}{{primary|primaryIndex|safe}}
      {% endif %}
      {% for rel in relations %}{{relation(rel)}}{% endfor %}
    })
  }

  down () {
    this.drop('{{table}}')
  }

}

module.exports = {{name}}Schema
